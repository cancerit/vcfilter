#!/bin/bash

########## LICENCE ##########
# Copyright (c) 2024 Genome Research Ltd
# 
# Author: CASM/Cancer IT <cgphelp@sanger.ac.uk>
# 
# This file is part of vcfilter.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# 
# 1. The usage of a range of years within a copyright statement contained within
# this distribution should be interpreted as being equivalent to a list of years
# including the first and last year specified and all consecutive years between
# them. For example, a copyright statement that reads ‘Copyright (c) 2005, 2007-
# 2009, 2011-2012’ should be interpreted as being identical to a statement that
# reads ‘Copyright (c) 2005, 2007, 2008, 2009, 2011, 2012’ and a copyright
# statement that reads ‘Copyright (c) 2005-2012’ should be interpreted as being
# identical to a statement that reads ‘Copyright (c) 2005, 2006, 2007, 2008,
# 2009, 2010, 2011, 2012’.
###########################

# author: Alex Byrne - ab63@sanger.ac.uk

set -e

VERSION="1.0.5"

if ! which python &> /dev/null; then
    echo "Error: python not found on PATH."
	exit 1
else
    python_version=$(python --version 2>&1 | cut -d' ' -f2)
	required_version="3.7.4"

	if [ "$(printf '%s\n' "$required_version" "$python_version" | sort -V | head -n1)" != "$required_version" ]; then
		echo "Error: ython 3.7.4 or greater required"
		exit 1
fi

if ! which bcftools &> /dev/null; then
    echo "Error: bcftools not found on PATH."
	exit 1
else
    bcftools_version=$(bcftools --version 2>&1 | head -n 1 | awk '{print $2}')
	required_version="1.9"

	if [ "$(printf '%s\n' "$required_version" "$bcftools_version" | sort -V | head -n1)" != "$required_version" ]; then
		echo "Error: bcftools 1.9 or greater required"
		exit 1
fi

# source subcommands
source "${0%/*}"/subcommands/filter_subcommand.sh
source "${0%/*}"/subcommands/get_subcommand.sh

usage() {
	cat "${0%/*}"/doc/man_vcfilter >&2
	exit 1
}

# let first positional parameter be a 'subcommand'
# assign CLA, $@, to array called 'args' (excluding subcommand name by shifting it)
# use args array to pass command line arguments to subcommands
subcommand=$1
case $subcommand in
	filter)
		shift
		args=("$@")
		sub_filter
		;;
	get)
		shift
		args=("$@")
		sub_get
		;;
	expression)
		less "${0%/*}"/doc/man_expression
		exit 1
		;;
	help)
		usage
		;;
	version)
		echo "vcfilter version $VERSION"
		;;
	*)
		echo "Error: Unrecognised subcommand: $1" >&2
		usage
		;;
esac

exit 0